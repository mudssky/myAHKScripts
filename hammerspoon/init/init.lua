-- Hammerspoon Configuration
-- Auto-generated by load_scripts.zsh
-- 自动生成的Hammerspoon配置文件

-- 设置日志级别
hs.logger.defaultLogLevel = 'info'

-- 创建主日志记录器
local log = hs.logger.new('main', 'info')

-- 显示加载开始消息
log.i("开始加载Hammerspoon配置...")

-- 获取配置目录路径
local configDir = hs.configdir
local scriptsDir = configDir .. "/scripts"

-- 创建scripts目录（如果不存在）
local scriptsPath = hs.fs.pathToAbsolute(scriptsDir)
if not scriptsPath then
    hs.fs.mkdir(scriptsDir)
    log.i("创建scripts目录: " .. scriptsDir)
end

-- 加载所有lua脚本的函数
local function loadLuaScripts(directory)
    local loadedCount = 0
    local errorCount = 0
    
    log.i("扫描目录: " .. directory)
    
    -- 遍历目录中的所有文件
    for file in hs.fs.dir(directory) do
        if file:match("%.lua$") and file ~= "init.lua" then
            local filePath = directory .. "/" .. file
            local relativePath = file
            
            log.i("尝试加载: " .. relativePath)
            
            -- 尝试加载脚本
            local success, result = pcall(function()
                return dofile(filePath)
            end)
            
            if success then
                log.i("✅ 成功加载: " .. relativePath)
                loadedCount = loadedCount + 1
            else
                log.e("❌ 加载失败: " .. relativePath .. " - " .. tostring(result))
                errorCount = errorCount + 1
            end
        end
    end
    
    return loadedCount, errorCount
end

-- 加载主配置目录中的lua文件
local mainLoaded, mainErrors = loadLuaScripts(configDir)

-- 加载scripts子目录中的lua文件
local scriptsLoaded, scriptsErrors = loadLuaScripts(scriptsDir)

-- 总计
local totalLoaded = mainLoaded + scriptsLoaded
local totalErrors = mainErrors + scriptsErrors

-- 显示加载结果
if totalLoaded > 0 then
    local message = string.format("🎉 Hammerspoon配置加载完成!\n✅ 成功: %d个脚本\n❌ 失败: %d个脚本", totalLoaded, totalErrors)
    hs.alert.show(message, 3)
    log.i(message)
else
    local message = "⚠️ 没有找到可加载的lua脚本"
    hs.alert.show(message, 2)
    log.w(message)
end

-- 设置配置文件重新加载快捷键
hs.hotkey.bind({"cmd", "alt", "ctrl"}, "R", function()
    hs.reload()
end)

hs.alert.show("按 Cmd+Alt+Ctrl+R 重新加载配置", 2)

-- 监听配置文件变化并自动重新加载
local function reloadConfig(files)
    local doReload = false
    for _, file in pairs(files) do
        if file:sub(-4) == ".lua" then
            doReload = true
            break
        end
    end
    if doReload then
        hs.timer.doAfter(0.5, function()
            hs.reload()
        end)
    end
end

-- 监听配置目录变化
local configWatcher = hs.pathwatcher.new(configDir, reloadConfig)
configWatcher:start()

-- 监听scripts目录变化
local scriptsWatcher = hs.pathwatcher.new(scriptsDir, reloadConfig)
scriptsWatcher:start()

log.i("配置文件监听已启动")
log.i("Hammerspoon配置加载完成!")